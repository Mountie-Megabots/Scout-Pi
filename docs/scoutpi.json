{
    "openapi": "3.0.2",
    "info": {
        "title": "Scout Pi - API",
        "description": "A FRC scouting API for the 2024 Chrescendo season",
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "externalDocs": {
        "description": "Scout Pi Github",
        "url": "https://github.com/Mountie-Megabots/Scout-Pi"
    },
    "servers": [
        {
            "url": "http://localhost:3000/"
        },
        {
            "url": "https://scouting.mountierobotics.org/"
        }
    ],
    "tags": [
        {
            "name": "comp",
            "description": "Operations about comps"
        },
        {
            "name": "team",
            "description": "Acess to teams"
        },
        {
            "name": "matches",
            "description": "Acess to matches"
        },
        {
            "name": "pitscout",
            "description": "Acess to pit scout data"
        },
        {
            "name": "scoutdata",
            "description": "Access to scouting data"
        },
        {
            "name": "user",
            "description": "Operations about user"
        }
    ],
    "paths": {
        "/comp/all": {
            "get": {
                "tags": [
                    "comp"
                ],
                "summary": "Gets all created comps",
                "description": "",
                "operationId": "getAllComps",
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                      "apiKey": []
                    }
                ]
            }
        },
        "/comp/create": {
            "post": {
                "tags": [
                    "comp"
                ],
                "summary": "Create comp",
                "description": "This can only be done by the logged in user.",
                "operationId": "createComp",
                "requestBody": {
                    "description": "Created comp object",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Comp"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Comp"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                      "apiKey": []
                    }
                ]
            }
        },
        "/comp/{compID}": {
            "get": {
                "tags": [
                    "comp"
                ],
                "summary": "Get comp by compID",
                "description": "This can only be done by the logged in user.",
                "operationId": "getComp",
                "parameters": [
                    {
                        "name": "compID",
                        "in": "path",
                        "description": "comp to be returned",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
                ,
                "security": [
                    {
                      "apiKey": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "comp"
                ],
                "summary": "Update comp data",
                "description": "This can only be done by the logged in user.",
                "operationId": "updateComp",
                "parameters": [
                    {
                        "name": "compID",
                        "in": "path",
                        "description": "comp that needs to be updated",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Update an existent user in the store",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Comp"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
                ,
                "security": [
                    {
                      "apiKey": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "comp"
                ],
                "summary": "Delete comp",
                "description": "This can only be done by the logged in user.",
                "operationId": "deleteComp",
                "parameters": [
                    {
                        "name": "compID",
                        "in": "path",
                        "description": "The ID of the comp that needs to be deleted",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid compID supplied"
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                      "apiKey": []
                    }
                ]
            }
        },
        "/team/{teamNum}": {
            "get": {
                "tags": [
                    "team"
                ],
                "summary": "Get team by teamNum",
                "description": "This can only be done by the logged in user.",
                "operationId": "getTeam",
                "parameters": [
                    {
                        "name": "teamNum",
                        "in": "path",
                        "description": "team to be returned",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
                ,
                "security": [
                    {
                      "apiKey": []
                    }
                ]
            }
        },
        "/match/comp/{compID}/all": {
            "get": {
                "tags": [
                    "matches"
                ],
                "summary": "Get match by compID",
                "description": "This can only be done by the logged in user.",
                "operationId": "getMatch",
                "parameters": [
                    {
                        "name": "compID",
                        "in": "path",
                        "description": "comps matches to be returned",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
                ,
                "security": [
                    {
                      "apiKey": []
                    }
                ]
            }
        },
        "/match/comp/{compID}/team/{teamNum}": {
            "get": {
                "tags": [
                    "matches"
                ],
                "summary": "Get match by compID and teamNum",
                "description": "This can only be done by the logged in user.",
                "operationId": "getMatchByTeamNum",
                "parameters": [
                    {
                        "name": "compID",
                        "in": "path",
                        "description": "comps matches to be returned",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "teamNum",
                        "in": "path",
                        "description": "teams matches to be returned",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
                ,
                "security": [
                    {
                      "apiKey": []
                    }
                ]
            }
        },
        "/match/comp/{compID}/match/{matchNum}": {
            "get": {
                "tags": [
                    "matches"
                ],
                "summary": "Get match by compID and teamNum",
                "description": "This can only be done by the logged in user.",
                "operationId": "getMatchByTeamNum",
                "parameters": [
                    {
                        "name": "compID",
                        "in": "path",
                        "description": "comps matches to be returned",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "matchNum",
                        "in": "path",
                        "description": "match to be returned",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
                ,
                "security": [
                    {
                      "apiKey": []
                    }
                ]
            }
        },
        "/pitscout/comp/{compID}/all": {
            "get": {
                "tags": [
                    "pitscout"
                ],
                "summary": "Get pitscout by compID",
                "description": "This can only be done by the logged in user.",
                "operationId": "getPitScout",
                "parameters": [
                    {
                        "name": "compID",
                        "in": "path",
                        "description": "comps pitscout data to be returned",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
                ,
                "security": [
                    {
                      "apiKey": []
                    }
                ]
            }
        },
        "/pitscout/comp/{compID}/create": {
            "post": {
                "tags": [
                    "pitscout"
                ],
                "summary": "Create PitScout",
                "description": "This can only be done by the logged in user.",
                "operationId": "createPitScout",
                "parameters": [
                    {
                        "name": "compID",
                        "in": "path",
                        "description": "Comp for pitscout data to be added to",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Created pitscout object",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PitScout"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PitScout"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                      "apiKey": []
                    }
                ]
            }
        },
        "/pitscout/comp/{compID}/team/{teamNum}": {
            "get": {
                "tags": [
                    "pitscout"
                ],
                "summary": "Get PitScout Data by teamNum",
                "description": "This can only be done by the logged in user.",
                "operationId": "getPitScoutByTeam",
                "parameters": [
                    {
                        "name": "compID",
                        "in": "path",
                        "description": "Comp for to get pitscout data from",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "teamNum",
                        "in": "path",
                        "description": "Team to get pitscout data for",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                      "apiKey": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "pitscout"
                ],
                "summary": "Update PitScout Data",
                "description": "This can only be done by the logged in user.",
                "operationId": "updatePitScout",
                "parameters": [
                    {
                        "name": "compID",
                        "in": "path",
                        "description": "Comp for to get pitscout data from",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "teamNum",
                        "in": "path",
                        "description": "Team to get pitscout data for",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Created pitscout object",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PitScout"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PitScout"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                      "apiKey": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "pitscout"
                ],
                "summary": "Delete Pitscout",
                "description": "This can only be done by the logged in user.",
                "operationId": "deletePitScout",
                "parameters": [
                    {
                        "name": "compID",
                        "in": "path",
                        "description": "Comp for to get pitscout data from",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "teamNum",
                        "in": "path",
                        "description": "Team to get pitscout data for",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid username supplied"
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                      "apiKey": []
                    }
                ]
            }
        },
        "/scoutdata/comp/{compID}/all": {
            "get": {
                "tags": [
                    "scoutdata"
                ],
                "summary": "Get scoutdata by compID",
                "description": "This can only be done by the logged in user.",
                "operationId": "getScoutdata",
                "parameters": [
                    {
                        "name": "compID",
                        "in": "path",
                        "description": "comps scout data to be returned",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
                ,
                "security": [
                    {
                      "apiKey": []
                    }
                ]
            }
        },
        "/scoutdata/comp/{compID}/match/{matchNum}/all": {
            "get": {
                "tags": [
                    "scoutdata"
                ],
                "summary": "Get scoutdata by compID and matchNum",
                "description": "This can only be done by the logged in user.",
                "operationId": "getScoutdata",
                "parameters": [
                    {
                        "name": "compID",
                        "in": "path",
                        "description": "comps scout data to be returned",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "matchNum",
                        "in": "path",
                        "description": "matches scout data to be returned",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
                ,
                "security": [
                    {
                      "apiKey": []
                    }
                ]
            }
        },
        "/scoutdata/comp/{compID}/team/{teamNum}/all": {
            "get": {
                "tags": [
                    "scoutdata"
                ],
                "summary": "Get scoutdata by compID and teamNum",
                "description": "This can only be done by the logged in user.",
                "operationId": "getScoutdata",
                "parameters": [
                    {
                        "name": "compID",
                        "in": "path",
                        "description": "comps scout data to be returned",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "teamNum",
                        "in": "path",
                        "description": "teams scout data to be returned",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
                ,
                "security": [
                    {
                      "apiKey": []
                    }
                ]
            }
        },
        "/scoutdata/comp/{compID}/match/{matchNum}/team/{teamNum}": {
            "get": {
                "tags": [
                    "scoutdata"
                ],
                "summary": "Get scoutdata by compID and matchNum and teamNum",
                "description": "This can only be done by the logged in user.",
                "operationId": "getScoutdata",
                "parameters": [
                    {
                        "name": "compID",
                        "in": "path",
                        "description": "comps scout data to be returned",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "matchNum",
                        "in": "path",
                        "description": "matches scout data to be returned",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "teamNum",
                        "in": "path",
                        "description": "teams scout data to be returned",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
                ,
                "security": [
                    {
                      "apiKey": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "scoutdata"
                ],
                "summary": "Update Scoutdata",
                "description": "This can only be done by the logged in user.",
                "operationId": "updateScoutData",
                "parameters": [
                    {
                        "name": "compID",
                        "in": "path",
                        "description": "comps scout data to be updated",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "matchNum",
                        "in": "path",
                        "description": "matches scout data to be updated",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "teamNum",
                        "in": "path",
                        "description": "teams scout data to be updated",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                    
                ],
                "requestBody": {
                    "description": "Created scoutdata object",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ScoutData"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ScoutData"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                      "apiKey": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "scoutdata"
                ],
                "summary": "Delete Scoutdata",
                "description": "This can only be done by the logged in user.",
                "operationId": "deleteScoutData",
                "parameters": [
                    {
                        "name": "compID",
                        "in": "path",
                        "description": "Comp to delete scout data from",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "matchNum",
                        "in": "path",
                        "description": "matches to delete scoutdata from",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "teamNum",
                        "in": "path",
                        "description": "Team to delete scout data form",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid Data supplied"
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                      "apiKey": []
                    }
                ]
            }
        },
        "/scoutdata/comp/{compID}/match/{matchNum}": {
            "delete": {
                "tags": [
                    "scoutdata"
                ],
                "summary": "Delete Scoutdata for whole match",
                "description": "This can only be done by the logged in user.",
                "operationId": "deleteScoutData",
                "parameters": [
                    {
                        "name": "compID",
                        "in": "path",
                        "description": "Comp to delete scout data from",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "matchNum",
                        "in": "path",
                        "description": "matches to delete scoutdata from",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid Data supplied"
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                      "apiKey": []
                    }
                ]
            }
        },
        "/scoutdata/comp/{compID}/create": {
            "post": {
                "tags": [
                    "scoutdata"
                ],
                "summary": "Create ScoutData",
                "description": "This can only be done by the logged in user.",
                "operationId": "createScoutData",
                "parameters": [
                    {
                        "name": "compID",
                        "in": "path",
                        "description": "Comp for Scoutdata data to be added to",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Created scoutdata object",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ScoutData"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ScoutData"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                      "apiKey": []
                    }
                ]
            }
        },
        "/signup": {
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "Create user",
                "description": "This can only be done by the logged in user.",
                "operationId": "createUser",
                "requestBody": {
                    "description": "Created user object",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "Logs user into the system",
                "description": "",
                "operationId": "loginUser",
                "requestBody": {
                    "description": "Created user object",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Login"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "headers": {
                            "X-Rate-Limit": {
                                "description": "calls per hour allowed by the user",
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            },
                            "X-Expires-After": {
                                "description": "date in UTC when token expires",
                                "schema": {
                                    "type": "string",
                                    "format": "date-time"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid username/password supplied"
                    }
                }
            }
        },
        "/user": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Gets the current authed user",
                "description": "",
                "operationId": "getUser",
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                      "apiKey": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "user"
                ],
                "summary": "Update the current authed user",
                "description": "",
                "operationId": "patchUser",
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                      "apiKey": []
                    }
                ]
            }
        },
        "/user/all": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Gets all registered users",
                "description": "",
                "operationId": "getAllUsers",
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                      "apiKey": []
                    }
                ]
            }
        },
        "/user/change-role/{userID}": {
            "patch": {
                "tags": [
                    "user"
                ],
                "summary": "Change Users Role",
                "description": "This can only be done by the logged in user.",
                "operationId": "updateUser",
                "parameters": [
                    {
                        "name": "userID",
                        "in": "path",
                        "description": "user that needs to be updated",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Update an existent user in the store",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Role"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
                ,
                "security": [
                    {
                      "apiKey": []
                    }
                ]
            }
        },
        "/user/{userID}": {
            "delete": {
                "tags": [
                    "user"
                ],
                "summary": "Delete user",
                "description": "This can only be done by the logged in user.",
                "operationId": "deleteUser",
                "parameters": [
                    {
                        "name": "userID",
                        "in": "path",
                        "description": "The ID of the user that needs to be deleted",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid username supplied"
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                      "apiKey": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "ScoutData": {
                "type": "object",
                "properties": {
                    "matchNum": {
                        "type": "integer",
                        "example": 52
                    },
                    "teamNum": {
                        "type": "integer",
                        "example": 7197
                    },
                    "startPos": {
                        "type": "string",
                        "example": "[[12.5,20.5],[18.2,15.4]]"
                    },
                    "autoLeave": {
                        "type": "boolean",
                        "example": true
                    },
                    "notesScoredAuto": {
                        "type": "integer",
                        "example": 2
                    },
                    "notesAutoOrder": {
                        "type": "string",
                        "example": "[0,2,3,4,1,6,7,8]"
                    },
                    "pickupLocation": {
                        "type": "string",
                        "example": "[[12.5,20.5],[18.2,15.4]]"
                    },
                    "ampNotesScored": {
                        "type": "integer",
                        "example": 4
                    },
                    "speakerNotesScored": {
                        "type": "integer",
                        "example": 8
                    },
                    "speakerNotesMissed": {
                        "type": "integer",
                        "example": 2
                    },
                    "scoringPos": {
                        "type": "string",
                        "example": "[[12.5,20.5],[18.2,15.4]]"
                    },
                    "drivingQuality": {
                        "type": "integer",
                        "example": 8
                    },
                    "penalities": {
                        "type": "integer",
                        "example": 1
                    },
                    "disconnects": {
                        "type": "integer",
                        "example": 0
                    },
                    "proformaceUnderDefense": {
                        "type": "integer",
                        "example": 7
                    },
                    "defenseByBot": {
                        "type": "integer",
                        "example": 5
                    },
                    "comments": {
                        "type": "string",
                        "example": "Very Fast Cycle Times"
                    }
                },
                "xml": {
                    "name": "comp"
                }
            },
            "PitScout": {
                "type": "object",
                "properties": {
                    "teamNum": {
                        "type": "integer",
                        "example": 7197
                    },
                    "botPic": {
                        "type": "string",
                        "example": "Base64 Image of a bot"
                    },
                    "autoRoutines": {
                        "type": "string",
                        "example": "Base64 Image of auto routines or a discription of the routines"
                    },
                    "framePrimeter": {
                        "type": "decimal",
                        "example": 26.4
                    },
                    "weight": {
                        "type": "decimal",
                        "example": 115.9
                    },
                    "drivetrain": {
                        "type": "string",
                        "example": "Swerve Drive Specialitys MK4's"
                    },
                    "intake": {
                        "type": "string",
                        "example": "Ground"
                    },
                    "scoringPos": {
                        "type": "string",
                        "example": "[[12.5,20.5],[18.2,15.4]]"
                    },
                    "driveUnderStage": {
                        "type": "boolean",
                        "example": true
                    },
                    "comments": {
                        "type": "string",
                        "example": "Bots name id MegaMobile"
                    }
                },
                "xml": {
                    "name": "comp"
                }
            },
            "Comp": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "2024 Maccomb"
                    },
                    "blueid": {
                        "type": "string",
                        "example": "2024mibkn"
                    }
                },
                "xml": {
                    "name": "comp"
                }
            },
            "CustomComp": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "2024 Maccomb"
                    },
                    "teams": {
                        "type": "string",
                        "example": "[\"7197\", \"9312\"]"
                    }
                },
                "xml": {
                    "name": "comp"
                }
            },
            "User": {
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string",
                        "example": "Mount"
                    },
                    "firstName": {
                        "type": "string",
                        "example": "Mountie"
                    },
                    "lastName": {
                        "type": "string",
                        "example": "Megabotss"
                    },
                    "password": {
                        "type": "string",
                        "example": "12345"
                    },
                    "role": {
                        "type": "string",
                        "example": "admin"
                    }
                },
                "xml": {
                    "name": "user"
                }
            },
            "Role": {
                "type": "object",
                "properties": {
                    "role": {
                        "type": "string",
                        "example": "admin"
                    }
                },
                "xml": {
                    "name": "role"
                }
            },
            "Login": {
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string",
                        "example": "Mount"
                    },
                    "password": {
                        "type": "string",
                        "example": "12345"
                    }
                },
                "xml": {
                    "name": "login"
                }
            },
            "Tag": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "xml": {
                    "name": "tag"
                }
            },
            "ApiResponse": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "type": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                },
                "xml": {
                    "name": "##default"
                }
            }
        },
        "requestBodies": {
            "Pet": {
                "description": "Pet object that needs to be added to the store",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Pet"
                        }
                    },
                    "application/xml": {
                        "schema": {
                            "$ref": "#/components/schemas/Pet"
                        }
                    }
                }
            },
            "UserArray": {
                "description": "List of user object",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                }
            }
        },
        "securitySchemes": {
            "apiKey": {
                "type": "apiKey",
                "description": "Your API key obtained after signing in. (Bearer \"key\")",
                "name": "authorization",
                "in": "header"
            }
        }
    }
}